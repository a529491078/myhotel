plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.edu.fjzzit.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    mybatisGenerator
}

repositories {
    mavenCentral()
}

dependencies {
    //添加依赖(mbg插件)
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.21'
    mybatisGenerator 'tk.mybatis:mapper:3.3.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.apache.shiro:shiro-spring:1.4.1'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.10'
    implementation 'commons-fileupload:commons-fileupload:1.3.3'
    implementation 'commons-io:commons-io:2.4'
    implementation'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'javax.servlet:jstl:1.2'
    implementation 'net.sf.ehcache:ehcache:2.10.4'
    implementation 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-cache'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.0'
}

//def getDbProperties = {
//    def properties = new Properties()
//    file("src/main/resources/mybatis/db-mysql.properties").withInputStream { inputStream ->
//        properties.load(inputStream)
//    }
//    properties;
//}
//task mybatisGenerate {
//    def properties = getDbProperties()
//    ant.properties['targetProject'] = projectDir.path
//    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
//    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
//    ant.properties['userId'] = properties.getProperty("jdbc.user")
//    ant.properties['password'] = properties.getProperty("jdbc.pass")
//    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
//    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
//    ant.properties['modelPackage'] = properties.getProperty("package.model")
//    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
//    ant.properties['sqlMapperPackage'] =properties.getProperty("package.xml")
//    ant.taskdef(
//            name: 'mbgenerator',
//            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
//            classpath: configurations.mybatisGenerator.asPath
//    )
//    ant.mbgenerator(overwrite: true,
//            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
//        propertyset {
//            propertyref(name: 'targetProject')
//            propertyref(name: 'userId')
//            propertyref(name: 'driverClass')
//            propertyref(name: 'connectionURL')
//            propertyref(name: 'password')
//            propertyref(name: 'src_main_java')
//            propertyref(name: 'src_main_resources')
//            propertyref(name: 'modelPackage')
//            propertyref(name: 'mapperPackage')
//            propertyref(name: 'sqlMapperPackage')
//        }
//    }
//}
